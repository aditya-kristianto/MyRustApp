"use strict";var KTUsersUpdatePassword=function(){const element=document.getElementById("kt_modal_update_password");const form=element.querySelector("#kt_modal_update_password_form");const modal=new bootstrap.Modal(element);var initUpdatePassword=()=>{var validator=FormValidation.formValidation(form,{fields:{current_password:{validators:{notEmpty:{message:"Current password is required"}}},new_password:{validators:{notEmpty:{message:"The password is required"},callback:{message:"Please enter valid password",callback:function(input){if(input.value.length>0){return validatePassword()}}}}},confirm_password:{validators:{notEmpty:{message:"The password confirmation is required"},identical:{compare:function(){return form.querySelector('[name="new_password"]').value},message:"The password and its confirm are not the same"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap5({rowSelector:".fv-row",eleInvalidClass:"",eleValidClass:""})}});const closeButton=element.querySelector('[data-kt-users-modal-action="close"]');closeButton.addEventListener("click",(e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to cancel?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, cancel it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then((function(result){if(result.value){form.reset();modal.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form has not been cancelled!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}}))}));const cancelButton=element.querySelector('[data-kt-users-modal-action="cancel"]');cancelButton.addEventListener("click",(e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to cancel?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, cancel it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then((function(result){if(result.value){form.reset();modal.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form has not been cancelled!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}}))}));const submitButton=element.querySelector('[data-kt-users-modal-action="submit"]');submitButton.addEventListener("click",(function(e){e.preventDefault();if(validator){validator.validate().then((function(status){console.log("validated!");if(status=="Valid"){submitButton.setAttribute("data-kt-indicator","on");submitButton.disabled=true;setTimeout((function(){submitButton.removeAttribute("data-kt-indicator");submitButton.disabled=false;Swal.fire({text:"Form has been successfully submitted!",icon:"success",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}}).then((function(result){if(result.isConfirmed){modal.hide()}}))}),2e3)}}))}}))};return{init:function(){initUpdatePassword()}}}();KTUtil.onDOMContentLoaded((function(){KTUsersUpdatePassword.init()}));