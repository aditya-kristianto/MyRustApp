"use strict";var KTUsersAddTask=function(){const element=document.getElementById("kt_modal_add_task");const form=element.querySelector("#kt_modal_add_task_form");const modal=new bootstrap.Modal(element);var initAddTask=()=>{$("#kt_modal_add_task_datepicker").flatpickr({dateFormat:"Y-m-d"});var validator=FormValidation.formValidation(form,{fields:{task_duedate:{validators:{notEmpty:{message:"Task due date is required"}}},task_name:{validators:{notEmpty:{message:"Task name is required"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap5({rowSelector:".fv-row",eleInvalidClass:"",eleValidClass:""})}});const closeButton=element.querySelector('[data-kt-users-modal-action="close"]');closeButton.addEventListener("click",e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to cancel?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, cancel it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then(function(result){if(result.value){form.reset();modal.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form has not been cancelled!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})});const cancelButton=element.querySelector('[data-kt-users-modal-action="cancel"]');cancelButton.addEventListener("click",e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to cancel?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, cancel it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then(function(result){if(result.value){form.reset();modal.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form has not been cancelled!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})});const submitButton=element.querySelector('[data-kt-users-modal-action="submit"]');submitButton.addEventListener("click",function(e){e.preventDefault();if(validator){validator.validate().then(function(status){console.log("validated!");if(status=="Valid"){submitButton.setAttribute("data-kt-indicator","on");submitButton.disabled=true;setTimeout(function(){submitButton.removeAttribute("data-kt-indicator");submitButton.disabled=false;Swal.fire({text:"Form has been successfully submitted!",icon:"success",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}}).then(function(result){if(result.isConfirmed){modal.hide()}})},2e3)}else{Swal.fire({text:"Sorry, looks like there are some errors detected, please try again.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})}})};var initUpdateTaskStatus=()=>{const allTaskMenus=document.querySelectorAll('[data-kt-menu-id="kt-users-tasks"]');allTaskMenus.forEach(el=>{const resetButton=el.querySelector('[data-kt-users-update-task-status="reset"]');const submitButton=el.querySelector('[data-kt-users-update-task-status="submit"]');const taskForm=el.querySelector('[data-kt-menu-id="kt-users-tasks-form"]');var validator=FormValidation.formValidation(taskForm,{fields:{task_status:{validators:{notEmpty:{message:"Task due date is required"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap5({rowSelector:".fv-row",eleInvalidClass:"",eleValidClass:""})}});$(taskForm.querySelector('[name="task_status"]')).on("change",function(){validator.revalidateField("task_status")});resetButton.addEventListener("click",e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to reset?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, reset it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then(function(result){if(result.value){taskForm.reset();el.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form was not reset!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})});submitButton.addEventListener("click",e=>{e.preventDefault();if(validator){validator.validate().then(function(status){console.log("validated!");if(status=="Valid"){submitButton.setAttribute("data-kt-indicator","on");submitButton.disabled=true;setTimeout(function(){submitButton.removeAttribute("data-kt-indicator");submitButton.disabled=false;Swal.fire({text:"Form has been successfully submitted!",icon:"success",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}}).then(function(result){if(result.isConfirmed){el.hide()}})},2e3)}else{Swal.fire({text:"Sorry, looks like there are some errors detected, please try again.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}}).then(function(){})}})}})})};return{init:function(){initAddTask();initUpdateTaskStatus()}}}();KTUtil.onDOMContentLoaded(function(){KTUsersAddTask.init()});