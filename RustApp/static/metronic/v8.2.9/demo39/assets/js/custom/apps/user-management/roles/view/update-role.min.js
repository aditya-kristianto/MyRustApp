"use strict";var KTUsersUpdatePermissions=function(){const element=document.getElementById("kt_modal_update_role");const form=element.querySelector("#kt_modal_update_role_form");const modal=new bootstrap.Modal(element);var initUpdatePermissions=()=>{var validator=FormValidation.formValidation(form,{fields:{role_name:{validators:{notEmpty:{message:"Role name is required"}}}},plugins:{trigger:new FormValidation.plugins.Trigger,bootstrap:new FormValidation.plugins.Bootstrap5({rowSelector:".fv-row",eleInvalidClass:"",eleValidClass:""})}});const closeButton=element.querySelector('[data-kt-roles-modal-action="close"]');closeButton.addEventListener("click",e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to close?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, close it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then(function(result){if(result.value){modal.hide()}})});const cancelButton=element.querySelector('[data-kt-roles-modal-action="cancel"]');cancelButton.addEventListener("click",e=>{e.preventDefault();Swal.fire({text:"Are you sure you would like to cancel?",icon:"warning",showCancelButton:true,buttonsStyling:false,confirmButtonText:"Yes, cancel it!",cancelButtonText:"No, return",customClass:{confirmButton:"btn btn-primary",cancelButton:"btn btn-active-light"}}).then(function(result){if(result.value){form.reset();modal.hide()}else if(result.dismiss==="cancel"){Swal.fire({text:"Your form has not been cancelled!.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})});const submitButton=element.querySelector('[data-kt-roles-modal-action="submit"]');submitButton.addEventListener("click",function(e){e.preventDefault();if(validator){validator.validate().then(function(status){console.log("validated!");if(status=="Valid"){submitButton.setAttribute("data-kt-indicator","on");submitButton.disabled=true;setTimeout(function(){submitButton.removeAttribute("data-kt-indicator");submitButton.disabled=false;Swal.fire({text:"Form has been successfully submitted!",icon:"success",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}}).then(function(result){if(result.isConfirmed){modal.hide()}})},2e3)}else{Swal.fire({text:"Sorry, looks like there are some errors detected, please try again.",icon:"error",buttonsStyling:false,confirmButtonText:"Ok, got it!",customClass:{confirmButton:"btn btn-primary"}})}})}})};const handleSelectAll=()=>{const selectAll=form.querySelector("#kt_roles_select_all");const allCheckboxes=form.querySelectorAll('[type="checkbox"]');selectAll.addEventListener("change",e=>{allCheckboxes.forEach(c=>{c.checked=e.target.checked})})};return{init:function(){initUpdatePermissions();handleSelectAll()}}}();KTUtil.onDOMContentLoaded(function(){KTUsersUpdatePermissions.init()});